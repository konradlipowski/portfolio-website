@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap");

*,
*::after,
*::before {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	// border: 1px solid red;
}

:root {
	--font-size-extrasuperultrasmall: clamp(0.35rem, calc(0.28rem + 0.33vw), 0.96rem);
	--font-size-omegasmall: clamp(0.42rem, calc(0.33rem + 0.42vw), 1.2rem);
	--font-size-ultrasmall: clamp(0.5rem, calc(0.39rem + 0.54vw), 1.5rem);
	--font-size-xxxs: clamp(0.6rem, calc(0.47rem + 0.69vw), 1.87rem);
	--font-size-xxs: clamp(0.72rem, calc(0.55rem + 0.88vw), 2.34rem);
	--font-size-xs: clamp(0.87rem, calc(0.64rem + 1.12vw), 2.92rem);
	--font-size-sm: clamp(1.04rem, calc(0.76rem + 1.42vw), 3.65rem);
	// --font-size-sm: clamp(1.25rem, calc(0.89rem + 1.81vw), 4.56rem);
	--font-size-base: clamp(1.5rem, calc(1.04rem + 2.29vw), 5.7rem);
	// --font-size-base: clamp(1.8rem, calc(1.22rem + 2.9vw), 7.13rem);
	--font-size-md: clamp(2.16rem, calc(1.42rem + 3.68vw), 8.91rem);
	--font-size-lg: clamp(2.59rem, calc(1.66rem + 4.66vw), 11.14rem);
	--font-size-xl: clamp(3.11rem, calc(1.93rem + 5.89vw), 13.92rem);
	--font-size-xxl: clamp(3.73rem, calc(2.24rem + 7.45vw), 17.4rem);
	--font-size-xxxl: clamp(4.48rem, calc(2.6rem + 9.42vw), 21.76rem);
	@media (width > 2000px) {
		--font-size-extrasuperultrasmall: clamp(0.42rem, calc(0.33rem + 0.42vw), 1.2rem);
		--font-size-omegasmall: clamp(0.5rem, calc(0.39rem + 0.54vw), 1.5rem);
		--font-size-ultrasmall: clamp(0.6rem, calc(0.47rem + 0.69vw), 1.87rem);
		--font-size-xxxs: clamp(0.72rem, calc(0.55rem + 0.88vw), 2.34rem);
		--font-size-xxs: clamp(0.87rem, calc(0.64rem + 1.12vw), 2.92rem);
		--font-size-xs: clamp(1.04rem, calc(0.76rem + 1.42vw), 3.65rem);
		--font-size-sm: clamp(1.5rem, calc(1.04rem + 2.29vw), 5.7rem);
		--font-size-base: clamp(2.16rem, calc(1.42rem + 3.68vw), 8.91rem);
		--font-size-md: clamp(2.59rem, calc(1.66rem + 4.66vw), 11.14rem);
		--font-size-lg: clamp(3.11rem, calc(1.93rem + 5.89vw), 13.92rem);
		--font-size-xl: clamp(3.73rem, calc(2.24rem + 7.45vw), 17.4rem);
		--font-size-xxl: clamp(4.48rem, calc(2.6rem + 9.42vw), 21.76rem);
		--font-size-xxxl: clamp(5.25rem, calc(3rem + 11.4vw), 25.96rem);
	}
}

body {
	background-color: #171717;
	font-family: "Oswald", sans-serif;
	color: #fafafa;
	user-select: none;
}

@keyframes rotate {
	from {
		rotate: 0deg;
	}

	50% {
		scale: 1.2 1.1;
	}

	to {
		rotate: 360deg;
	}
}

// NAW
#hamburger-menu {
	width: clamp(60px, 5vmin, 100px);
	height: clamp(58px, 4.8vmin, 98px);
	position: fixed;
	top: 5vmin;
	right: 5vmin;
	-webkit-transform: rotate(0deg);
	-moz-transform: rotate(0deg);
	-o-transform: rotate(0deg);
	transform: rotate(0deg);
	-webkit-transition: 0.5s ease-in-out;
	-moz-transition: 0.5s ease-in-out;
	-o-transition: 0.5s ease-in-out;
	transition: 0.5s ease-in-out;
	cursor: pointer;
	z-index: 7;
}

#hamburger-menu span {
	z-index: 6;
	display: block;
	position: absolute;
	height: 9px;
	width: 100%;
	background: #fafafa;
	border-radius: 9px;
	opacity: 1;
	left: 0;
	-webkit-transform: rotate(0deg);
	-moz-transform: rotate(0deg);
	-o-transform: rotate(0deg);
	transform: rotate(0deg);
	-webkit-transition: 0.25s ease-in-out;
	-moz-transition: 0.25s ease-in-out;
	-o-transition: 0.25s ease-in-out;
	transition: 0.25s ease-in-out;
}

#hamburger-menu span:nth-child(1) {
	top: 0px;
}

#hamburger-menu span:nth-child(2),
#hamburger-menu span:nth-child(3) {
	top: 20px;
}

#hamburger-menu span:nth-child(4) {
	top: 40px;
}

#hamburger-menu.open span:nth-child(1) {
	top: 18px;
	width: 0%;
	left: 50%;
}

#hamburger-menu.open span:nth-child(2) {
	-webkit-transform: rotate(45deg);
	-moz-transform: rotate(45deg);
	-o-transform: rotate(45deg);
	transform: rotate(45deg);
}

#hamburger-menu.open span:nth-child(3) {
	-webkit-transform: rotate(-45deg);
	-moz-transform: rotate(-45deg);
	-o-transform: rotate(-45deg);
	transform: rotate(-45deg);
}

#hamburger-menu.open span:nth-child(4) {
	top: 18px;
	width: 0%;
	left: 50%;
}
// NAW

#background-blob {
	// background-color: white;
	height: 20vmax;
	aspect-ratio: 1;
	position: fixed;
	left: 50%;
	top: 50%;
	translate: -50% -50%;
	border-radius: 50%;
	// background: linear-gradient(to right, #444444, #295bae);
	animation: rotate 20s infinite;
	opacity: 0.7;
	filter: blur(50px);
	z-index: -1;
}

.primary-heading {
	color: #fafafa;
	font-weight: 600;
	font-size: var(--font-size-);
}
.primary-text {
}
.secondary-heading {
	font-weight: 600;
	color: transparent;
	-webkit-text-stroke-width: 0.5px;
	-webkit-text-stroke-color: #fafafa;
	font-size: var(--font-size-xl);
	font-style: italic;
}
.secondary-text {
}
.nav-open {
	opacity: 1;
	left: 0;
}
nav {
	opacity: 0;
	position: fixed;
	background-color: #171717;
	height: 100vh;
	width: 100vw;
	top: 0;
	left: -100vw;
	z-index: 5;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	transition: all 0.4s ease-in-out;
	a {
		text-decoration: unset;
		color: #fafafa;
		font-size: var(--font-size-md);
	}
}
header {
	height: 100vh;
	text-transform: uppercase;
	display: flex;
	flex-direction: column;
	align-items: center;
	line-height: 0.9;
	position: relative;
	.header-buttons__container {
		margin-top: 5vh;
		width: 100%;
		display: flex;
		justify-content: center;
	}
}

// CHUJ
$rotationDuration: 30s;
$hoverDuration: 0.3s;

$easeIn: cubic-bezier(0.32, 0, 0.67, 0);
$easeOut: cubic-bezier(0.33, 1, 0.68, 1);

$textColor: #fafafa;
$bgColor: transparent;

.link {
	position: absolute;
	bottom: 0;
	left: 0;
	font-size: var(--font-size-xxxs);
	width: 20vmin;
	aspect-ratio: 1;
	text-transform: uppercase;
	letter-spacing: 0.12em;
	word-spacing: 0.2em;
	text-decoration: none;

	&__svg {
		width: 100%;
		height: auto;
		transform-box: fill-box;
		fill: $textColor;
		stroke: $textColor;
		stroke-width: 0.05em;
		stroke-linecap: round;
		stroke-linejoin: round;
		transform: rotate(90deg);
	}

	&__arrow {
		transform-origin: 50% 50%;
		transition: transform $hoverDuration / 2 $easeIn;

		.link:hover & {
			transform: scale(1.1);
			transition: transform $hoverDuration $easeOut;
		}
	}

	&__arrow {
		stroke-width: 0.075em;
	}

	&__text {
		animation: rotateReverse normal infinite $rotationDuration linear;
		transform-origin: 50% 50%;

		.link:hover & {
			animation-play-state: paused;
		}
	}
}

@keyframes rotateReverse {
	to {
		transform: rotate(-360deg);
	}
}
